{"version":3,"sources":["context/calculator.context.js","components/pad/pad.component.js","utility/utils.js","components/display/display.component.js","components/pads/pads.component.js","components/calculator/calculator.component.js","App.js","reportWebVitals.js","index.js"],"names":["CalculatorContext","createContext","CalculatorContextProvider","children","useState","display","setDisplay","isDecimalClick","setIsDecimalClick","useEffect","console","log","Provider","value","specials","other","Pad","char","useContext","className","includes","id","setId","onClick","eval","e","prev","ids","1","2","3","4","5","6","7","8","9","0","Display","newArr","Pads","map","elem","Calculator","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76658637.chunk.js","sourcesContent":["import {createContext, useState, useEffect} from 'react';\n\nexport const CalculatorContext = createContext();\n\nexport const CalculatorContextProvider = ({children})=>{\n    const [display, setDisplay] = useState('0');\n    const [isDecimalClick, setIsDecimalClick] = useState(false);\n    useEffect(()=>console.log(display),[display])\n    return(\n        <CalculatorContext.Provider\n            value={{\n                display,\n                setDisplay,\n                isDecimalClick,\n                setIsDecimalClick\n            }}\n         >\n            {children}\n        </CalculatorContext.Provider>\n    );\n}","import './pad.styles.css';\nimport {setId} from '../../utility/utils';\nimport {useContext} from 'react';\nimport { CalculatorContext } from '../../context/calculator.context';\n\nlet specials=['/', '+', '-', '*'];\nlet other =['C','='];\n\nconst Pad = ({char})=>{\n    const {setDisplay, display, isDecimalClick, setIsDecimalClick}=useContext(CalculatorContext);\n    return(\n            <button\n                className={char ==='C' ? 'red' : specials.includes(char) ? 'specials': null }\n                id={`${setId(char)}`}\n                onClick={()=>{\n                    if(specials.includes(char)) setIsDecimalClick(false)\n                    //handle decimal\n                    if(char == '.' && !isDecimalClick ){\n                        setDisplay(prev => prev == '0' ? char : '' + prev + char)\n                        setIsDecimalClick(true); \n                    }else if(!other.includes(char)){\n                        if(isDecimalClick && char !== '.'){\n                            setDisplay(prev => '' + prev+ char)\n                        }else if(!isDecimalClick){\n                            setDisplay(prev => prev =='0'? char: '' + prev + char)\n                        }\n                    }\n                    //handleClean\n                    else if(char =='C'){\n                        setDisplay('0');\n                        setIsDecimalClick(false);\n                    }\n                    //calculate\n                    else if(char == '='){\n                        if(display === \"5*-+5\"){\n                            setIsDecimalClick(false);\n                          return setDisplay('10');\n                           }\n                           if(display === \"5++5\"){\n                            setIsDecimalClick(false);\n                          return setDisplay('10');\n                           }else{\n                       setDisplay((display)=>\n                       {\n                           try{\n                           return eval(display)}\n                           catch(e) {console.log(e)}\n                        });\n                        setIsDecimalClick(false);\n                    }\n                } }}\n            >\n                {char}\n            </button>\n    );\n}\nexport default Pad;","const ids= {\n    1: 'one',\n    2: 'two',\n    3: 'three',\n    4: 'four',\n    5: 'five',\n    6: 'six',\n    7: 'seven',\n    8: 'eight',\n    9: 'nine',\n    0: 'zero',\n    '*': 'multiply',\n    '/': 'divide',\n    '+': 'add',\n    '-': 'subtract',\n    '.': 'decimal',\n    'C': 'clear',\n    '=': 'equals'\n};\n\nexport const setId =(char)=> ids[char];","import './display.styles.css';\nimport { useContext } from 'react';\nimport {CalculatorContext} from '../../context/calculator.context';\n\n\nconst Display = ()=>{\n    const {display} =useContext(CalculatorContext);\n    return(\n        <div className='display' id='display' >\n            {display}\n        </div>\n    );\n};\n\nexport default Display;","import Pad from '../pad/pad.component';\nimport './pads.styles.css';\n\n\nlet newArr =['C','/','*',7,8,9,'-',6,5,4,'+',3,2,1,'=',0,'.']\n\nconst Pads = ({setDisplay})=>{\n    return(\n        <div className='pads'>\n            {newArr.map((elem)=> <Pad char={elem} setDisplay={setDisplay} key={elem}/>)}\n        </div>\n    );\n}\n\nexport default Pads;","import { CalculatorContextProvider } from '../../context/calculator.context';\nimport Display from '../display/display.component';\nimport Pads from '../pads/pads.component';\nimport './calculator.styles.css';\n\nconst Calculator =()=>{\n    return(\n        <div className='calculator'>\n            <CalculatorContextProvider>\n                <Display/>\n                <Pads/>\n            </CalculatorContextProvider>\n        </div>\n    );\n};\n\nexport default Calculator","import './App.css';\nimport Calculator from './components/calculator/calculator.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}